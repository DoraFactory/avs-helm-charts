node:
  volumeMounts:
    - name: bls-key
      mountPath: /app/operator_keys/bls_key.json
      subPath: bls_key.json
      readOnly: true
    - name: ecdsa-key
      mountPath: /app/operator_keys/ecdsa_key.json
      subPath: ecdsa_key.json
      readOnly: true
    - name: signer-ecdsa-key
      mountPath: /app/operator_keys/signer_ecdsa_key.json
      subPath: ecdsa_key.json
      readOnly: true
    - name: config
      mountPath: /app/config/operator.yaml
      subPath: operator.yaml
  env:
    - name: BLS_PRIVATE_KEY_PATH
      value: "/app/operator_keys/bls_key.json"
    - name: ECDSA_PRIVATE_KEY_PATH
      value: "/app/operator_keys/ecdsa_key.json"
    - name: ECDSA_SIGNER_PRIVATE_KEY_PATH
      value: "/app/operator_keys/signer_ecdsa_key.json"
    - name: OPERATOR_ADDRESS
      value: "YOUR_OPERATOR_ADDRES"
    - name: OPERATOR_SIGNATURE_ADDRESS
      valueFrom:
        secretKeyRef:
          name: YOUR_ECDSA_SIGN_KEY_SECRET
          key: ecdsa-public-key
    - name: OPERATOR_SIGNER_ECDSA_KEY_PASSWORD
      valueFrom:
        secretKeyRef:
          name: YOUR_ECDSA_SIGN_KEY_SECRET
          key: ecdsa-private-key-password
    - name: OPERATOR_BLS_KEY_PASSWORD
      valueFrom:
        secretKeyRef:
          name: YOUR_BLS_KEY_SECRET
          key: bls-private-key-password
    - name: OPERATOR_ECDSA_KEY_PASSWORD
      valueFrom:
        secretKeyRef:
          name: YOUR_ECDSA_KEY_SECRET
          key: ecdsa-private-key-password
    - name: HTTP_RPC_URL
      value: https://lb.drpc.org/ogrpc?network=ethereum # Your rpc
    - name: WS_RPC_URL
      value: wss://lb.drpc.org/ogrpc?network=ethereum # Your rpc

serviceAccount:
  create: true
  name: openoracle

volumes:
  - name: bls-key
    secret:
      secretName: YOUR_BLS_KEY_SECRET
      items:
        - key: bls-private-key
          path: bls_key.json
  - name: ecdsa-key
    secret:
      secretName: YOUR_ECDSA_KEY_SECRET
      items:
        - key: ecdsa-private-key
          path: ecdsa_key.json
  - name: signer-ecdsa-key
    secret:
      secretName: YOUR_ECDSA_SIGN_KEY_SECRET
      items:
        - key: ecdsa-private-key
          path: ecdsa_key.json

configs:
  operator.yaml: |

    # this sets the logger level (true = info, false = debug)
    production: true

    # EigenLayer Slasher contract address

    # This is the address of the slasher which is deployed in the anvil saved state
    # The saved eigenlayer state is located in tests/anvil/eigenlayer-deployed-anvil-state.json
    avs_registry_coordinator_address: 0x7dd7320044013f7f49B1b6D67aED10726fe6e62b
    operator_state_retriever_address: 0x8b57BC00cF01841a78b09Fabe3C2D49A1303A060

    # address which the aggregator listens on for operator signed messages
    aggregator_server_ip_port_address: https://us-central1-openoracle-de73b.cloudfunctions.net/backend_apis/api/report_result
    price_config_server_ip_port_address: https://us-central1-openoracle-de73b.cloudfunctions.net/backend_apis/api/price_feed_config
    chain_name: ethmainnet

    # avs node spec compliance https://eigen.nethermind.io/docs/spec/intro
    eigen_metrics_ip_port_address: 0.0.0.0:9091
    enable_metrics: true
    node_api_ip_port_address: 0.0.0.0:9010
    enable_node_api: true
    health_ws_url: ws://localhost:3030/

    # we need to register the operator on startup when running the docker compose file
    # because unfortunately we cannot register the operator previously and save it in the anvil json file
    # This is because anvil only dumps the state, and not the receipt tree, so when we restart anvil with
    # the registered operator, it's blspubkey registering event with the compendium is not present anymore,
    # and so the aggregator can't find it.... very annoying
    register_operator_on_startup: true
    chain_urls:
      ethmainnet: wss://lb.drpc.org/ogrpc?network=ethereum
